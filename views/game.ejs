<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Mind game</title>
</head>
<body>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/public/js/jquery-3.5.1.min.js"></script>

    <script>
        var gameExecuteList = new Array();
        var gameHost = '<%=game.host%>';
        var username = '<%=username%>';
        var socket;
        var game;


        // Scree Layout process
        var displayBoard = () => {
            $("#lobby").css("display", "none");
            $("#game").css("display", "");

            displayOtherPlayers();
            displayCurrentCards();
        };

        var displayOtherPlayers = () => {
            game.players.filter((p) => { return p.name != username }).forEach(p => {
                $player = $("div");
                $player.html(p.name);
                $("#game #player-list").append($player);
            });
        };

        var displayCurrentCards = () => {
        }

        var displayLobbyPlayer = (playername) => {

            if(!game) {
                return;
            }

            var players = game.players.filter((p) => { return p.name == playername });
            if(players.length == 0) {
                return;
            }

            var player = players[0];

            $playerItem = $("#lobby #player-list ul").find("[data-player-name=" + player.name + "]");
            if($playerItem.length == 0) {
                $playerItem = $("<li/>");
                $playerItem.attr("data-player-name", player.name);
                $("#lobby #player-list ul").append($playerItem);
            }
            
            if(player.status == 1) {
                // connected
                $playerItem.html(player.name);
                $playerItem.css('font-style', '');
            } else {
                // not connected
                $playerItem.html(player.name + " (disconnected)");
                $playerItem.css('font-style', 'italic');
            }
        }

        // -------------------------------
        // -------------------------------

        // lobby loop
        var lobbyLoop = setInterval(function(){
            if(gameExecuteList.length > 0) {
                gameExecuteList.shift()();
            }
        }, 200);

        // -------------------------------
        // -------------------------------

        // Start button process
        var btnStartClick = () => {
            gameExecuteList.push(() => {
                socket.emit('gameStart');
            });
        };

        // Leave button process
        var btnLeaveClick = () => {
            gameExecuteList.push(() => {
                clearInterval(lobbyLoop);
                socket.emit('playerLeave');
                window.location.href = "/";
            });
        };

        // -------------------------------
        // -------------------------------

        // Start game process
        var socketGameStart = (socketGame) => {
            gameExecuteList.push(() => {
                game = socketGame;
                displayBoard();
            });
        };

        // Player join process
        var socketPlayerJoin = (infos) => {
            gameExecuteList.push(() => {
                game = infos.game;
                displayLobbyPlayer(infos.data.username);
            });
        };

        // Player diconnect process
        var socketPlayerDisconnect = (infos) => {
            gameExecuteList.push(() => {
                game = infos.game;
                displayLobbyPlayer(infos.data.username);
            });
        };

        // Player leave process
        var socketPlayerLeave = (infos) => {
            gameExecuteList.push(() => {
                game = infos.game;
                $("#lobby #player-list ul").find("[data-player-name=" + infos.data.username + "]").remove();
            });
        };

        // Error process
        var socketError = (data) => {
            gameExecuteList.push(() => {
                clearInterval(lobbyLoop);
                alert(JSON.stringify(data));
                window.location.href = "/game?host=" + game.host;
            });
        }

        // -------------------------------
        // -------------------------------

        $(document).ready(() => {

            // Init socket
            socket = io();

            // Init game variable
            game = JSON.parse('<%- JSON.stringify(game) %>');

            // Window events
            window.onbeforeunload = function (e) {
                clearInterval(lobbyLoop);
                socket.emit('playerDisconnect');
            };
            
            // Socket events
            socket.on('err', socketError);
            socket.on('playerJoin', socketPlayerJoin);
            socket.on('playerLeave', socketPlayerLeave);
            socket.on('playerDisconnect', socketPlayerDisconnect);
            socket.on('gameStart', socketGameStart);

            // UI events
            $("#btn-start").click(btnStartClick);
            $("#btn-leave").click(btnLeaveClick);

            if(game.status == 1) {
                // If game is started, display game
                gameExecuteList.push(displayBoard);
            } else {
                // If game is not started, send join event
                gameExecuteList.push(() => {
                    socket.emit('playerJoin', { gameHost:gameHost, username:username });
                });
            }
        });


    </script>

    <div id="lobby">
        <div>welcome to the game of <%=game.host %> !</div>
        <div>Waiting for the host to start the game ...</div>
        <% if (username == game.host) { %>
            <div>
                <button id="btn-start">Start Game</button>
            </div>
        <% } %>
        <div>
            <button id="btn-leave">Leave</button>
        </div>
        <div>List of players in the game</div>
        <div id="player-list">
            <ul>
                <% var i =1; %>
                <% game.players.forEach((p) => { %>
                    <li data-player-name="<%=p.name %>">
                        <%=p.name %>
                    </li>
                    <% i++; %>
                <% }); %>
            </ul>
        </div>
        
    </div>

    <div id="game">
        <div id="player-list">
        </div>
        <div id="playing-cards">
        </div>
        <div id="user-played-cards">
        </div>
        <div id="user-cards">
        </div>
    </div>





</body>